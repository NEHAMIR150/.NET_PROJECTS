<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>